version: "3"

services:
  nginx:
    image: nginx
    container_name: "project1_nginx"
    volumes:
    - ./:/app:ro
    - ./.docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    restart: "always"
    labels:
      - "traefik.frontend.rule=HostRegexp:{subdomain:[a-z]+}.${TRAEFIK_DOMAIN_NAME}"
    networks:
      - default
      - project1

  php:
    build: 
      dockerfile: Dockerfile
      context: ./.docker/php
      args: 
        - PHPREDIS_VERSION=${PHPREDIS_VERSION}
        - XDEBUG_VERSION=${XDEBUG_VERSION}
        - PHPFPM_VERSION=${PHPFPM_VERSION}
    container_name: "project1_php"
    volumes:
      - ./project:/app
    restart: "always"
    networks:
    - project1

  db:
    image: mariadb:${MARIADB_VERSION}
    container_name: "project1_db"
    restart: "always"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    volumes:
      - ./data/mariadb:/var/lib/mysql
    networks:
      - project1

  redis:
    image: redis:${REDIS_VERSION}
    container_name: "project1_redis"
    restart: "always"
    networks:
      - project1
  

  elasticsearch:
    image: elasticsearch:${ELASTICSEARCH_VERSION}
    container_name: "project1_elasticsearch"
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"
      - "9300:9300"
    restart: "always"
    networks:
      - project1
  
      
  composer:
    image: composer
    container_name: "project1_composer"
    restart: "no"
    volumes:
      - ./project:/app
    networks:
      - default
    command: "${COMPOSER_COMMAND}"

networks:
  default:
    external:
      name: gateway

  project1:
    internal: true